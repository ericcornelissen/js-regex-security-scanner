name: Publish
on:
  push:
    branches:
      - main

permissions: read-all

jobs:
  check:
    name: Check
    runs-on: ubuntu-24.04
    outputs:
      released: ${{ steps.version.outputs.released }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0 # To fetch all tags
          persist-credentials: false
      - name: Check released
        id: version
        run: |
          VERSION="$(grep 'version=' < Containerfile | awk -F'"' '{print $2}')"
          echo "version=v${VERSION}" >> "${GITHUB_OUTPUT}"
          if [ -n "$(git tag --list "v${VERSION}")" ]; then
            echo 'released=true' >> "${GITHUB_OUTPUT}"
          else
            echo 'released=false' >> "${GITHUB_OUTPUT}"
          fi
  git:
    name: Git
    runs-on: ubuntu-24.04
    if: ${{ needs.check.outputs.released == 'false' }}
    permissions:
      contents: write # To push a branch
    needs:
      - check
    steps:
      - name: Checkout repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0
      - name: Get major version
        id: version
        env:
          VERSION: ${{ needs.check.outputs.version }}
        run: |
          echo "result=${VERSION%%.*}" >>"${GITHUB_OUTPUT}"
      - name: Create release tag
        env:
          VERSION: ${{ needs.check.outputs.version }}
        run: |
          git tag "${VERSION}"
          git push origin "${VERSION}"
      - name: Update major version branch
        env:
          MAJOR_VERSION: ${{ steps.version.outputs.result }}
        run: git push origin "HEAD:${MAJOR_VERSION}"
  registry:
    name: ${{ matrix.name }}
    runs-on: ubuntu-24.04
    if: ${{ needs.check.outputs.released == 'false' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: docker
            image: docker.io/ericornelissen/js-re-scan
            url: https://hub.docker.com/r/ericornelissen/js-re-scan
          - name: ghcr
            image: ghcr.io/ericcornelissen/js-re-scan
            url: https://github.com/ericcornelissen/js-regex-security-scanner/pkgs/container/js-re-scan
    permissions:
      id-token: write # To perform keyless signing with cosign
      packages: write # To push an image to GHCR
    environment:
      name: ${{ matrix.name }}
      url: ${{ matrix.url }}
    needs:
      - check
    steps:
      - name: Checkout repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          persist-credentials: false
      - name: Get cosign version
        id: versions
        run: |
          COSIGN_VERSION="$(grep cosign < .tool-versions | awk '{print $2}')"
          echo "cosign=${COSIGN_VERSION}" >> "${GITHUB_OUTPUT}"
      - name: Install cosign
        uses: sigstore/cosign-installer@c56c2d3e59e4281cc41dea2217323ba5694b171e # v3.8.0
        with:
          cosign-release: v${{ steps.versions.outputs.cosign }}
      - name: Log in to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        if: ${{ matrix.name != 'ghcr' }}
        with:
          username: ${{ vars.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push to Docker Hub
        id: docker_hub
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        with:
          context: .
          file: Containerfile
          push: true
          tags: >-
            ${{ matrix.image }}:latest,
            ${{ matrix.image }}:${{ needs.check.outputs.version }}
      - name: Sign container image
        env:
          IMAGE: ${{ matrix.image }}
          IMAGE_DIGEST: ${{ steps.docker_hub.outputs.digest }}
          REF: ${{ github.sha }}
          REPO: ${{ github.repository }}
          WORKFLOW: ${{ github.workflow }}
        run: |
          cosign sign --yes \
            -a "repo=${REPO}" \
            -a "workflow=${WORKFLOW}" \
            -a "ref=${REF}" \
            "${IMAGE}@${IMAGE_DIGEST}"
