name: Check
on:
  pull_request: ~
  push:
    branches:
      - main
      - v0

permissions: read-all

jobs:
  audit:
    name: Audit
    uses: ericcornelissen/js-regex-security-scanner/.github/workflows/reusable-audit.yml@main
    needs:
      - build
  build:
    name: Build with ${{ matrix.engine }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        engine:
          - docker
          - podman
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@a4aa98b93cab29d9b1101a6143fb8bce00e2eac4 # v2.7.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            auth.docker.io:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            production.cloudflare.docker.com:443
            registry-1.docker.io:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - name: Build
        env:
          ENGINE: ${{ matrix.engine }}
        run: make build "ENGINE=${ENGINE}"
  licenses:
    name: Licenses
    runs-on: ubuntu-22.04
    needs:
      - build
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@a4aa98b93cab29d9b1101a6143fb8bce00e2eac4 # v2.7.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            auth.docker.io:443
            files.pythonhosted.org:443
            fulcio.sigstore.dev:443
            github.com:443
            gitlab.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            production.cloudflare.docker.com:443
            pypi.org:443
            registry-1.docker.io:443
            registry.npmjs.org:443
            rekor.sigstore.dev:443
            sigstore-tuf-root.storage.googleapis.com:443
            toolbox-data.anchore.io:443
            tuf-repo-cdn.sigstore.dev:443
      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - name: Install Node.js
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install tooling
        uses: asdf-vm/actions/install@4f8f7939dd917fc656bb7c3575969a5988c28364 # v3.0.0
      - name: Check container image licenses
        if: ${{ failure() || success() }}
        run: make license-check-image
      - name: Check npm licenses
        if: ${{ failure() || success() }}
        run: make license-check-npm
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@a4aa98b93cab29d9b1101a6143fb8bce00e2eac4 # v2.7.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            files.pythonhosted.org:443
            fulcio.sigstore.dev:443
            github.com:443
            gitlab.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            pypi.org:443
            registry.npmjs.org:443
            rekor.sigstore.dev:443
            sigstore-tuf-root.storage.googleapis.com:443
            tuf-repo-cdn.sigstore.dev:443
      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - name: Install Node.js
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install tooling
        uses: asdf-vm/actions/install@4f8f7939dd917fc656bb7c3575969a5988c28364 # v3.0.0
      - name: Lint CI
        if: ${{ failure() || success() }}
        run: make lint-ci
      - name: Lint Containerfile
        if: ${{ failure() || success() }}
        run: make lint-image
      - name: Lint JavaScript
        if: ${{ failure() || success() }}
        run: make lint-js
      - name: Lint MarkDown
        if: ${{ failure() || success() }}
        run: make lint-md
      - name: Lint YAML
        if: ${{ failure() || success() }}
        run: make lint-yml
  test:
    name: Test with ${{ matrix.engine }}
    runs-on: ubuntu-22.04
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        engine:
          - docker
          - podman
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@a4aa98b93cab29d9b1101a6143fb8bce00e2eac4 # v2.7.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            auth.docker.io:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            production.cloudflare.docker.com:443
            registry-1.docker.io:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          submodules: true
      - name: Install Node.js
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Test
        env:
          ENGINE: ${{ matrix.engine }}
        run: make test "ENGINE=${ENGINE}"
